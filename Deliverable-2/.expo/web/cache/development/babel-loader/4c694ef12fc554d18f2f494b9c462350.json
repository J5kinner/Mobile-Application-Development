{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/jonah/Desktop/COMP3130/Mobile-Applications-Development/Deliverable-1/components/AppInput.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport AppColors from \"../config/AppColors\";\n\nvar AppInput = function AppInput(_ref) {\n  var icon = _ref.icon,\n      otherProps = _objectWithoutProperties(_ref, [\"icon\"]);\n\n  var _otherProps$field = otherProps.field,\n      name = _otherProps$field.name,\n      _onBlur = _otherProps$field.onBlur,\n      onChange = _otherProps$field.onChange,\n      value = _otherProps$field.value,\n      _otherProps$form = otherProps.form,\n      errors = _otherProps$form.errors,\n      touched = _otherProps$form.touched,\n      setFieldTouched = _otherProps$form.setFieldTouched,\n      inputProps = _objectWithoutProperties(otherProps, [\"field\", \"form\"]);\n\n  var hasError = errors[name] && touched[name];\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, icon && React.createElement(MaterialCommunityIcons, {\n    name: icon,\n    size: 30,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }\n  }), React.createElement(TextInput, _extends({\n    style: [styles.textInput, otherProps.multiline && {\n      height: otherProps.numberOfLines * 40\n    }, hasError && styles.errorInput],\n    value: value,\n    onChangeText: function onChangeText(text) {\n      return onChange(name)(text);\n    },\n    onBlur: function onBlur() {\n      setFieldTouched(name);\n\n      _onBlur(name);\n    }\n  }, inputProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }))), hasError && React.createElement(Text, {\n    style: styles.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 20\n    }\n  }, errors[name]));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: AppColors.inputTextBackground,\n    marginVertical: 10,\n    width: '100%',\n    flexDirection: 'row',\n    borderRadius: 5,\n    padding: 10\n  },\n  textInput: {\n    marginLeft: 10,\n    height: 40,\n    width: '89%',\n    borderBottomWidth: 1,\n    fontSize: 20,\n    fontFamily: Platform.OS === 'android' ? \"System\" : \"Cochin\",\n    color: '#000',\n    flexDirection: 'row',\n    margin: -4\n  },\n  errorText: {\n    fontSize: 15,\n    color: 'red',\n    paddingLeft: '15%'\n  },\n  errorInput: {\n    borderColor: 'red'\n  }\n});\nexport default AppInput;","map":{"version":3,"sources":["/home/jonah/Desktop/COMP3130/Mobile-Applications-Development/Deliverable-1/components/AppInput.js"],"names":["React","MaterialCommunityIcons","AppColors","AppInput","icon","otherProps","field","name","onBlur","onChange","value","form","errors","touched","setFieldTouched","inputProps","hasError","styles","container","textInput","multiline","height","numberOfLines","errorInput","text","errorText","StyleSheet","create","backgroundColor","inputTextBackground","marginVertical","width","flexDirection","borderRadius","padding","marginLeft","borderBottomWidth","fontSize","fontFamily","Platform","OS","color","margin","paddingLeft","borderColor"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, StyleSheet, Text,  TextInput, Platform, KeyboardAvoidingView } from 'react-native';\nimport {MaterialCommunityIcons} from '@expo/vector-icons'\nimport AppColors from '../config/AppColors'\n\n\nconst AppInput = ({icon, ...otherProps}) => {\n  const {\n    field: { name, onBlur, onChange, value },\n    form: { errors, touched, setFieldTouched },\n    ...inputProps\n  } = otherProps\n\n  const hasError = errors[name] && touched[name]\n\n  return (\n    <>\n    <View style={styles.container}>\n      {icon && <MaterialCommunityIcons name={icon} size={30}/>}\n      <TextInput\n\n        style={[\n          styles.textInput,\n          otherProps.multiline && { height: otherProps.numberOfLines * 40 },\n          hasError && styles.errorInput\n        ]}\n        value={value}\n        onChangeText={(text) => onChange(name)(text)}\n        onBlur={() => {\n          setFieldTouched(name)\n          onBlur(name)\n        }}\n        {...inputProps}\n      />\n      </View>\n      {hasError && <Text style={styles.errorText}>{errors[name]}</Text>}\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container:{\n    backgroundColor: AppColors.inputTextBackground,\n    marginVertical: 10,\n    width:'100%',\n    flexDirection: 'row',\n    borderRadius: 5,\n    padding: 10,\n\n},\n  textInput: {\n    marginLeft:10,\n    height: 40,\n    width: '89%',\n    borderBottomWidth: 1,\n    fontSize:20,\n    fontFamily: Platform.OS === 'android' ? \"System\" : \"Cochin\",\n    color:'#000', \n    flexDirection: 'row',\n    margin:-4\n  },\n  errorText: {\n    fontSize: 15,\n    color: 'red',\n    paddingLeft: '15%'\n  },\n  errorInput: {\n    borderColor: 'red',\n  }\n})\n\nexport default AppInput"]},"metadata":{},"sourceType":"module"}