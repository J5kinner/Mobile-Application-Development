{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/jonah/Desktop/COMP3130/Mobile-Applications-Development/Deliverable-1/screens/RegisterScreen.js\";\nimport React, { useState, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { Formik, Field } from \"formik\";\nimport * as yup from \"yup\";\nimport AppColors from \"../config/AppColors\";\nimport AppButton from \"../components/AppButton\";\nimport AppScreen from \"../components/AppScreen\";\nimport AppText from \"../components/AppText\";\nimport AppInput from \"../components/AppInput\";\nimport FormButton from \"../components/FormButton\";\nvar signUpValidateschema = yup.object().shape({\n  fullName: yup.string().matches(/(\\w.+\\s).+/, \"Enter at least 2 names\").required(\"Full name is required\").label(\"Fullname\"),\n  email: yup.string().email(\"Please enter valid email\").required(\"Email is required\").label(\"Email\"),\n  password: yup.string().matches(/\\w*[a-z]\\w*/, \"Password must have a small letter\").matches(/\\w*[A-Z]\\w*/, \"Password must have a capital letter\").matches(/\\d/, \"Password must have a number\").matches(/[!@#$%^&*()\\-_\"=+{}; :,<.>]/, \"Password must have a special character\").min(8, function (_ref) {\n    var min = _ref.min;\n    return \"Password must be at least \" + min + \" characters\";\n  }).required(\"Password is required\"),\n  confirmPassword: yup.string().oneOf([yup.ref(\"password\")], \"Passwords do not match\").required(\"Confirm password is required\")\n});\n\nfunction RegisterScreen(_ref2) {\n  var _this = this;\n\n  var navigation = _ref2.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      fullname = _useState2[0],\n      setUserFName = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  return React.createElement(AppScreen, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.logoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"tower-beach\",\n    size: 100,\n    color: AppColors.maroon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), React.createElement(AppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Register Here\")), React.createElement(Formik, {\n    initialValues: {\n      fullname: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      console.log(values);\n    },\n    validationSchema: signUpValidateschema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, function (_ref3) {\n    var values = _ref3.values,\n        handleChange = _ref3.handleChange,\n        handleSubmit = _ref3.handleSubmit,\n        errors = _ref3.errors,\n        setFieldTouched = _ref3.setFieldTouched,\n        touched = _ref3.touched,\n        isValid = _ref3.isValid,\n        isSubmitting = _ref3.isSubmitting,\n        handleBlur = _ref3.handleBlur;\n    return React.createElement(React.Fragment, null, React.createElement(View, {\n      style: styles.textInputContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, React.createElement(Field, {\n      component: AppInput,\n      icon: \"account\",\n      name: \"fullName\",\n      placeholder: \"Full Name\",\n      value: values.fullName,\n      onBlur: function onBlur() {\n        return setFieldTouched(\"fullNname\");\n      },\n      onChangeText: handleChange(\"fullNname\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }), React.createElement(Field, {\n      component: AppInput,\n      icon: \"email\",\n      name: \"email\",\n      placeholder: \"Email Address\",\n      keyboardType: \"email-address\",\n      value: values.email,\n      onBlur: function onBlur() {\n        return setFieldTouched(\"email\");\n      },\n      onChangeText: handleChange(\"email\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }), React.createElement(Field, {\n      component: AppInput,\n      icon: \"shield-lock-outline\",\n      name: \"password\",\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      value: values.password,\n      onBlur: function onBlur() {\n        return setFieldTouched(\"password\");\n      },\n      onChangeText: handleChange(\"password\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }), React.createElement(Field, {\n      component: AppInput,\n      icon: \"shield-lock\",\n      name: \"confirmPassword\",\n      placeholder: \"Confirm Password\",\n      secureTextEntry: true,\n      value: values.confirmPassword,\n      onBlur: function onBlur() {\n        return setFieldTouched(\"confirmPassword\");\n      },\n      onChangeText: handleChange(\"confirmPassword\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }), React.createElement(AppButton, {\n      title: \"SIGN UP\",\n      onPress: handleSubmit,\n      disabled: isValid || values.name === \"\" || values.email === \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    })));\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: AppColors.background,\n    padding: 25,\n    flex: 1\n  },\n  logoContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexGrow: 1,\n    padding: 1\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"sources":["/home/jonah/Desktop/COMP3130/Mobile-Applications-Development/Deliverable-1/screens/RegisterScreen.js"],"names":["React","useState","useRef","MaterialCommunityIcons","Formik","Field","yup","AppColors","AppButton","AppScreen","AppText","AppInput","FormButton","signUpValidateschema","object","shape","fullName","string","matches","required","label","email","password","min","confirmPassword","oneOf","ref","RegisterScreen","navigation","fullname","setUserFName","setEmail","setPassword","styles","container","logoContainer","maroon","values","console","log","handleChange","handleSubmit","errors","setFieldTouched","touched","isValid","isSubmitting","handleBlur","textInputContainer","name","StyleSheet","create","backgroundColor","background","padding","flex","justifyContent","alignItems","flexGrow"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { Formik, Field } from \"formik\";\nimport * as yup from \"yup\";\n\nimport AppColors from \"../config/AppColors\";\nimport AppButton from \"../components/AppButton\";\nimport AppScreen from \"../components/AppScreen\";\nimport AppText from \"../components/AppText\";\nimport AppInput from \"../components/AppInput\";\nimport FormButton from \"../components/FormButton\";\n\nconst signUpValidateschema = yup.object().shape({\n  fullName: yup\n    .string()\n    .matches(/(\\w.+\\s).+/, \"Enter at least 2 names\")\n    .required(\"Full name is required\")\n    .label(\"Fullname\"),\n  email: yup\n    .string()\n    .email(\"Please enter valid email\")\n    .required(\"Email is required\")\n    .label(\"Email\"),\n  password: yup\n    .string()\n    .matches(/\\w*[a-z]\\w*/, \"Password must have a small letter\")\n    .matches(/\\w*[A-Z]\\w*/, \"Password must have a capital letter\")\n    .matches(/\\d/, \"Password must have a number\")\n    .matches(\n      /[!@#$%^&*()\\-_\"=+{}; :,<.>]/,\n      \"Password must have a special character\"\n    )\n    .min(8, ({ min }) => `Password must be at least ${min} characters`)\n    .required(\"Password is required\"),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref(\"password\")], \"Passwords do not match\")\n    .required(\"Confirm password is required\"),\n});\n\nfunction RegisterScreen({ navigation }) {\n  const [fullname, setUserFName] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n\n  return (\n    <AppScreen style={styles.container}>\n      <View style={styles.logoContainer}>\n        <MaterialCommunityIcons\n          name=\"tower-beach\"\n          size={100}\n          color={AppColors.maroon}\n        />\n        <AppText>Register Here</AppText>\n      </View>\n      <Formik\n        initialValues={{\n          fullname: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n        }}\n        onSubmit={(values) => {\n            console.log(values);\n        }}\n        validationSchema={signUpValidateschema}\n        >\n        {({\n          values,\n          handleChange,\n          handleSubmit,\n          errors,\n          setFieldTouched,\n          touched,\n          isValid,\n          isSubmitting,\n          handleBlur,\n        }) => (\n          <>\n            <View style={styles.textInputContainer}>\n              <Field\n                component={AppInput}\n                icon=\"account\"\n                name=\"fullName\"\n                placeholder=\"Full Name\"\n                value={values.fullName}\n                onBlur={() => setFieldTouched(\"fullNname\")}\n                onChangeText={handleChange(\"fullNname\")}\n              />\n              <Field\n                component={AppInput}\n                icon=\"email\"\n                name=\"email\"\n                placeholder=\"Email Address\"\n                keyboardType=\"email-address\"\n                value={values.email}\n                onBlur={() => setFieldTouched(\"email\")}\n                onChangeText={handleChange(\"email\")}\n              />\n\n              <Field\n                component={AppInput}\n                icon=\"shield-lock-outline\"\n                name=\"password\"\n                placeholder=\"Password\"\n                secureTextEntry\n                value={values.password}\n                onBlur={() => setFieldTouched(\"password\")}\n                onChangeText={handleChange(\"password\")}\n              />\n              <Field\n                component={AppInput}\n                icon=\"shield-lock\"\n                name=\"confirmPassword\"\n                placeholder=\"Confirm Password\"\n                secureTextEntry\n                value={values.confirmPassword}\n                onBlur={() => setFieldTouched(\"confirmPassword\")}\n                onChangeText={handleChange(\"confirmPassword\")}\n              />\n\n              <AppButton\n                title=\"SIGN UP\"\n                onPress={ handleSubmit}\n                disabled={isValid || values.name === \"\" || values.email === \"\"}\n              />\n    \n            </View>\n          </>\n        )}\n      </Formik>\n    </AppScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: AppColors.background,\n    padding: 25,\n    flex: 1,\n  },\n  logoContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexGrow: 1,\n    padding: 1,\n  },\n});\nexport default RegisterScreen;\n"]},"metadata":{},"sourceType":"module"}