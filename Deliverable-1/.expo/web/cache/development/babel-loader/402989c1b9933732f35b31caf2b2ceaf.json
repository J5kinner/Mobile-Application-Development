{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/jonah/Desktop/Deliverable-1/components/AppInput.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport AppColors from \"../config/AppColors\";\n\nvar AppInput = function AppInput(_ref) {\n  var icon = _ref.icon,\n      otherProps = _objectWithoutProperties(_ref, [\"icon\"]);\n\n  var _otherProps$field = otherProps.field,\n      name = _otherProps$field.name,\n      _onBlur = _otherProps$field.onBlur,\n      onChange = _otherProps$field.onChange,\n      value = _otherProps$field.value,\n      _otherProps$form = otherProps.form,\n      errors = _otherProps$form.errors,\n      touched = _otherProps$form.touched,\n      setFieldTouched = _otherProps$form.setFieldTouched,\n      inputProps = _objectWithoutProperties(otherProps, [\"field\", \"form\"]);\n\n  var hasError = errors[name] && touched[name];\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, icon && React.createElement(MaterialCommunityIcons, {\n    name: icon,\n    size: 30,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 18\n    }\n  }), React.createElement(TextInput, _extends({\n    style: [styles.textInput, otherProps.multiline && {\n      height: otherProps.numberOfLines * 36\n    }, hasError && styles.errorInput],\n    value: value,\n    onChangeText: function onChangeText(text) {\n      return onChange(name)(text);\n    },\n    onBlur: function onBlur() {\n      setFieldTouched(name);\n\n      _onBlur(name);\n    }\n  }, inputProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }))), hasError && React.createElement(Text, {\n    style: styles.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }\n  }, errors[name]));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: AppColors.inputTextBackground,\n    marginVertical: 10,\n    borderRadius: 5,\n    padding: 10,\n    width: \"100%\",\n    flexDirection: \"row\"\n  },\n  textInput: {\n    marginLeft: 10,\n    height: 40,\n    borderBottomWidth: 1,\n    fontSize: 20,\n    width: \"89%\",\n    color: \"#000\",\n    margin: -4,\n    flexDirection: \"row\",\n    fontFamily: Platform.OS === \"android\" ? \"System\" : \"Cochin\"\n  },\n  errorText: {\n    fontSize: 15,\n    color: \"red\",\n    paddingLeft: \"15%\"\n  },\n  errorInput: {\n    borderColor: \"red\"\n  }\n});\nexport default AppInput;","map":{"version":3,"sources":["/home/jonah/Desktop/Deliverable-1/components/AppInput.js"],"names":["React","MaterialCommunityIcons","AppColors","AppInput","icon","otherProps","field","name","onBlur","onChange","value","form","errors","touched","setFieldTouched","inputProps","hasError","styles","container","textInput","multiline","height","numberOfLines","errorInput","text","errorText","StyleSheet","create","backgroundColor","inputTextBackground","marginVertical","borderRadius","padding","width","flexDirection","marginLeft","borderBottomWidth","fontSize","color","margin","fontFamily","Platform","OS","paddingLeft","borderColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, StyleSheet, Text, TextInput, Platform } from \"react-native\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport AppColors from \"../config/AppColors\";\n\nconst AppInput = ({ icon, ...otherProps }) => {\n  const {\n    field: { name, onBlur, onChange, value },\n    form: { errors, touched, setFieldTouched },\n    ...inputProps\n  } = otherProps;\n  const hasError = errors[name] && touched[name];\n\n  return (\n    <>\n      <View style={styles.container}>\n        {icon && <MaterialCommunityIcons name={icon} size={30} />}\n        <TextInput\n          style={[\n            styles.textInput,\n            otherProps.multiline && { height: otherProps.numberOfLines * 36 },\n            hasError && styles.errorInput,\n          ]}\n          value={value}\n          onChangeText={(text) => onChange(name)(text)}\n          onBlur={() => {\n            setFieldTouched(name);\n            onBlur(name);\n          }}\n          {...inputProps}\n        />\n      </View>\n      {hasError && <Text style={styles.errorText}>{errors[name]}</Text>}\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: AppColors.inputTextBackground,\n    marginVertical: 10,\n    borderRadius: 5,\n    padding: 10,\n    width: \"100%\",\n    flexDirection: \"row\",\n  },\n  textInput: {\n    marginLeft: 10,\n    height: 40,\n    borderBottomWidth: 1,\n    fontSize: 20,\n    width: \"89%\",\n    color: \"#000\",\n    margin: -4,\n    flexDirection: \"row\",\n    fontFamily: Platform.OS === \"android\" ? \"System\" : \"Cochin\",\n  },\n  errorText: {\n    fontSize: 15,\n    color: \"red\",\n    paddingLeft: \"15%\",\n  },\n  errorInput: {\n    borderColor: \"red\",\n  },\n});\n\nexport default AppInput;\n"]},"metadata":{},"sourceType":"module"}