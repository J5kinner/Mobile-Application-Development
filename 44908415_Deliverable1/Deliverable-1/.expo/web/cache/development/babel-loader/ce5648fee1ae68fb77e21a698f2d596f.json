{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/jonah/Desktop/COMP3130/Mobile-Applications-Development/Deliverable-1/Navigation/TabNavigator.js\";\n\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport SavedScreen from \"../screens/SavedScreen\";\nimport ExploreScreen from \"../screens/ExploreScreen\";\nimport AppIcon from \"../components/AppIcon\";\nimport AppColors from \"../config/AppColors\";\nvar AppTab = createBottomTabNavigator();\n\nvar TabNavigator = function TabNavigator() {\n  return React.createElement(AppTab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n\n          if (route.name === 'Explore') {\n            return React.createElement(Ionicons, {\n              name: focused ? 'map-sharp' : 'map-outline',\n              size: size,\n              color: color,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 13\n              }\n            });\n          } else if (route.name === 'Saved') {\n            return React.createElement(Ionicons, {\n              name: focused ? 'heart-sharp' : 'heart-outline',\n              size: size,\n              color: color,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 13\n              }\n            });\n          } else if (route.name === 'Profile') {\n            return React.createElement(Ionicons, {\n              name: focused ? 'person-sharp' : 'person-outline',\n              size: size,\n              color: color,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 13\n              }\n            });\n          }\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: AppColors.red,\n      inactiveTintColor: AppColors.grey\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 3\n    }\n  }, React.createElement(AppTab.Screen, {\n    name: \"Explore\",\n    component: ExploreScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }), React.createElement(AppTab.Screen, {\n    name: \"Saved\",\n    component: SavedScreen,\n    options: {\n      tabBarBadge: 3\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), React.createElement(AppTab.Screen, {\n    name: \"Profile\",\n    component: ProfileScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default TabNavigator;","map":{"version":3,"sources":["/home/jonah/Desktop/COMP3130/Mobile-Applications-Development/Deliverable-1/Navigation/TabNavigator.js"],"names":["createBottomTabNavigator","Ionicons","React","ProfileScreen","SavedScreen","ExploreScreen","AppIcon","AppColors","AppTab","TabNavigator","route","tabBarIcon","focused","color","size","name","activeTintColor","red","inactiveTintColor","grey","tabBarBadge"],"mappings":";;;AAAA,SAASA,wBAAT,QAAyC,+BAAzC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAGA,OAAOC,aAAP;AACA,OAAOC,WAAP;AACA,OAAOC,aAAP;AACA,OAAOC,OAAP;AACA,OAAOC,SAAP;AAEA,IAAMC,MAAM,GAAGR,wBAAwB,EAAvC;;AAEA,IAAMS,YAAY,GAAG,SAAfA,YAAe;AAAA,SACnB,oBAAC,MAAD,CAAQ,SAAR;AAEE,IAAA,aAAa,EAAE;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAC7BC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;;AACxC,cAAIJ,KAAK,CAACK,IAAN,KAAe,SAAnB,EAA8B;AAC5B,mBACE,oBAAC,QAAD;AACE,cAAA,IAAI,EACFH,OAAO,GACH,WADG,GAEH,aAJR;AAME,cAAA,IAAI,EAAEE,IANR;AAOE,cAAA,KAAK,EAAED,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,WAZD,MAYO,IAAIH,KAAK,CAACK,IAAN,KAAe,OAAnB,EAA4B;AACjC,mBACE,oBAAC,QAAD;AACE,cAAA,IAAI,EAAEH,OAAO,GAAG,aAAH,GAAmB,eADlC;AAEE,cAAA,IAAI,EAAEE,IAFR;AAGE,cAAA,KAAK,EAAED,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAOC,WARI,MAQC,IAAIH,KAAK,CAACK,IAAN,KAAe,SAAnB,EAA8B;AACpC,mBACE,oBAAC,QAAD;AACE,cAAA,IAAI,EAAEH,OAAO,GACT,cADS,GAET,gBAHN;AAKE,cAAA,IAAI,EAAEE,IALR;AAME,cAAA,KAAK,EAAED,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAWD;AACF;AAnC4B,OAAhB;AAAA,KAFjB;AAuCE,IAAA,aAAa,EAAE;AACbG,MAAAA,eAAe,EAAET,SAAS,CAACU,GADd;AAEbC,MAAAA,iBAAiB,EAAEX,SAAS,CAACY;AAFhB,KAvCjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAiFE,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,SAApB;AAA8B,IAAA,SAAS,EAAEd,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjFF,EAkFM,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAED,WAAvC;AAAsD,IAAA,OAAO,EAAE;AAAEgB,MAAAA,WAAW,EAAE;AAAf,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlFN,EAmFM,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,SAApB;AAA8B,IAAA,SAAS,EAAEjB,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnFN,CADmB;AAAA,CAArB;;AAwFA,eAAeM,YAAf","sourcesContent":["import { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from '@expo/vector-icons';\n\nimport * as React from 'react';\n\n\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport SavedScreen from \"../screens/SavedScreen\";\nimport ExploreScreen from \"../screens/ExploreScreen\";\nimport AppIcon from \"../components/AppIcon\";\nimport AppColors from \"../config/AppColors\";\n\nconst AppTab = createBottomTabNavigator();\n\nconst TabNavigator = () => (\n  <AppTab.Navigator\n    // tabBarOptions={{ activeTintColor: \"red\", activeBackgroundColor: \"grey\", inactiveTintColor: \"grey\" }}\n    screenOptions={({ route }) => ({\n      tabBarIcon: ({ focused, color, size }) => {\n        if (route.name === 'Explore') {\n          return (\n            <Ionicons\n              name={\n                focused\n                  ? 'map-sharp'\n                  : 'map-outline'\n              }\n              size={size}\n              color={color}\n            />\n          );\n        } else if (route.name === 'Saved') {\n          return (\n            <Ionicons\n              name={focused ? 'heart-sharp' : 'heart-outline'}\n              size={size}\n              color={color}\n            />\n          );\n          }else if (route.name === 'Profile') {\n          return (\n            <Ionicons\n              name={focused\n                ? 'person-sharp'\n                : 'person-outline'\n              }\n              size={size}\n              color={color}\n            />\n          );\n        \n        }\n      },\n    })}\n    tabBarOptions={{\n      activeTintColor: AppColors.red,\n      inactiveTintColor: AppColors.grey,\n    }}\n  >\n\n    {/* <AppTab.Screen\n      name=\"Explore\"\n      component={ExploreScreen}\n      options={{\n        tabBarIcon: () => (\n          \n          <AppIcon\n            name=\"magnify\"\n            iconColor={\"white\"}\n          />\n        ),\n      }}\n    />\n    <AppTab.Screen\n      name=\"Saved\"\n      component={SavedScreen}\n      options={{\n        tabBarIcon: () => (\n          <AppIcon\n            name=\"account-box-multiple\"\n            iconColor=\"white\"\n          />\n        ),\n      }}\n    />\n     <AppTab.Screen\n      name=\"Profile\"\n      component={ProfileScreen}\n      options={{\n        tabBarIcon: () => (\n          <AppIcon\n            name=\"account\"\n          />\n        ),\n      }}\n    /> */}\n    <AppTab.Screen name=\"Explore\" component={ExploreScreen} />\n        <AppTab.Screen name=\"Saved\" component={SavedScreen }  options={{ tabBarBadge: 3 }} />\n        <AppTab.Screen name=\"Profile\" component={ProfileScreen} />\n  </AppTab.Navigator>\n);\n\nexport default TabNavigator;\n"]},"metadata":{},"sourceType":"module"}